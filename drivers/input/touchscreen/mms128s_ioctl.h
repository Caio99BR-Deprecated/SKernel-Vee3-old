/*
 * drivers/input/touchscreen/MCS8000_ts_ioctl.h
 *
 * Header file of Touch Driver
 * 
 * Copyright (C) 2008 LGE Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _MCS8000_TS_DOWN_IOCTL_H_
#define _MCS8000_TS_DOWN_IOCTL_H_

#include <asm/ioctl.h>

struct mcs8000_ts_down_ioctl_i2c_type {
	int addr;
	int data;
};
//---------------------------------------------------------------------------------------
#define MCS8000_TS_DOWN_IOCTL_MAGIC 			'D'

#define MCS8000_TS_DOWN_IOCTL_VDD_HIGH  	_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 0)
#define MCS8000_TS_DOWN_IOCTL_VDD_LOW 		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 1)

#define MCS8000_TS_DOWN_IOCTL_INTR_HIGH 	_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 2)
#define MCS8000_TS_DOWN_IOCTL_INTR_LOW 		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 3)
#define MCS8000_TS_DOWN_IOCTL_INTR_OUT_HIGH 		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 4)
#define MCS8000_TS_DOWN_IOCTL_INTR_OUT_LOW  		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 5)

#define MCS8000_TS_DOWN_IOCTL_INTR_IN 		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 6)

#define MCS8000_TS_DOWN_IOCTL_SCL_HIGH		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 7)
#define MCS8000_TS_DOWN_IOCTL_SCL_LOW		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 8)
#define MCS8000_TS_DOWN_IOCTL_SDA_HIGH		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 9)
#define MCS8000_TS_DOWN_IOCTL_SDA_LOW		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 10)
#define MCS8000_TS_DOWN_IOCTL_SCL_OUT_HIGH		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 11)
#define MCS8000_TS_DOWN_IOCTL_SCL_OUT_LOW		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 12)
#define MCS8000_TS_DOWN_IOCTL_SDA_OUT_HIGH		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 13)
#define MCS8000_TS_DOWN_IOCTL_SDA_OUT_LOW		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 14)

#define MCS8000_TS_DOWN_IOCTL_SCL_IN		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 15)
#define MCS8000_TS_DOWN_IOCTL_SDA_IN		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 16)

#define MCS8000_TS_DOWN_IOCTL_SCL_READ		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 17)
#define MCS8000_TS_DOWN_IOCTL_SDA_READ		_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 18)

#define MCS8000_TS_DOWN_IOCTL_I2C_ENABLE 	_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 19)
#define MCS8000_TS_DOWN_IOCTL_I2C_DISABLE   _IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 20)

#define MCS8000_TS_DOWN_IOCTL_I2C_READ   	_IOWR( MCS8000_TS_DOWN_IOCTL_MAGIC, 21, struct mcs8000_ts_down_ioctl_i2c_type)
#define MCS8000_TS_DOWN_IOCTL_I2C_WRITE   	_IOWR( MCS8000_TS_DOWN_IOCTL_MAGIC, 22, struct mcs8000_ts_down_ioctl_i2c_type)

/* 23 */

#define MCS8000_TS_DOWN_IOCTL_SELECT_TS_TYPE 	_IO( MCS8000_TS_DOWN_IOCTL_MAGIC, 24)

#define MCS8000_TS_DOWN_IOCTL_MAXNR 25

#define MCS8000_TS_DOWN_IOCTL_DELAY	 'S'
#define MCS8000_TS_DOWN_IOCTL_DEALY_1US			_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 0)
#define MCS8000_TS_DOWN_IOCTL_DEALY_2US			_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 1)
#define MCS8000_TS_DOWN_IOCTL_DEALY_3US			_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 2)
#define MCS8000_TS_DOWN_IOCTL_DEALY_5US			_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 3)
#define MCS8000_TS_DOWN_IOCTL_DEALY_7US			_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 4)
#define MCS8000_TS_DOWN_IOCTL_DEALY_10US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 5)
#define MCS8000_TS_DOWN_IOCTL_DEALY_15US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 6)
#define MCS8000_TS_DOWN_IOCTL_DEALY_20US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 7)
#define MCS8000_TS_DOWN_IOCTL_DEALY_40US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 8)
#define MCS8000_TS_DOWN_IOCTL_DEALY_70US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 9)
#define MCS8000_TS_DOWN_IOCTL_DEALY_100US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 10)
#define MCS8000_TS_DOWN_IOCTL_DEALY_150US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 11)
#define MCS8000_TS_DOWN_IOCTL_DEALY_300US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 12)
#define MCS8000_TS_DOWN_IOCTL_DEALY_500US		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 13)
#define MCS8000_TS_DOWN_IOCTL_DEALY_800US	  _IO( MCS8000_TS_DOWN_IOCTL_DELAY, 14)
#define MCS8000_TS_DOWN_IOCTL_DEALY_1MS		  _IO( MCS8000_TS_DOWN_IOCTL_DELAY, 15)
#define MCS8000_TS_DOWN_IOCTL_DEALY_5MS			_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 16)
#define MCS8000_TS_DOWN_IOCTL_DEALY_10MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 17)
#define MCS8000_TS_DOWN_IOCTL_DEALY_25MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 18)
#define MCS8000_TS_DOWN_IOCTL_DEALY_30MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 19)
#define MCS8000_TS_DOWN_IOCTL_DEALY_40MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 20)
#define MCS8000_TS_DOWN_IOCTL_DEALY_45MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 21)
#define MCS8000_TS_DOWN_IOCTL_DEALY_60MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 22)
#define MCS8000_TS_DOWN_IOCTL_DEALY_80MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 23)
#define MCS8000_TS_DOWN_IOCTL_DEALY_100MS		_IO( MCS8000_TS_DOWN_IOCTL_DELAY, 24)
//---------------------------------------------------------------------------------------
#define MCS8000_TS_IOCTL_MAGIC 'T'

#define MCS8000_TS_IOCTL_MAIN_ON 					_IO( MCS8000_TS_IOCTL_MAGIC, 0)
#define MCS8000_TS_IOCTL_MAIN_OFF 					_IO( MCS8000_TS_IOCTL_MAGIC, 1)
#define MCS8000_TS_IOCTL_SUB_ON 					_IO( MCS8000_TS_IOCTL_MAGIC, 2)
#define MCS8000_TS_IOCTL_SUB_OFF 					_IO( MCS8000_TS_IOCTL_MAGIC, 3)
#define MCS8000_TS_IOCTL_I2C_TEST_MAIN 				_IO( MCS8000_TS_IOCTL_MAGIC, 4)
#define MCS8000_TS_IOCTL_I2C_TEST_SUB 				_IO( MCS8000_TS_IOCTL_MAGIC, 5)
#define MCS8000_TS_IOCTL_DIAG_PRESS 				_IOW( MCS8000_TS_IOCTL_MAGIC, 6, struct mcs8000_ts_ioctl_diag_emul_type)
#define MCS8000_TS_IOCTL_DIAG_RELEASE 				_IOW( MCS8000_TS_IOCTL_MAGIC, 7, struct mcs8000_ts_ioctl_diag_emul_type)
#define MCS8000_TS_IOCTL_FW_VER 					_IO( MCS8000_TS_IOCTL_MAGIC, 8)
#define MCS8000_TS_IOCTL_DEBUG 						_IO( MCS8000_TS_IOCTL_MAGIC, 9)
#define MCS8000_TS_I2C_READ 						_IOWR( MCS8000_TS_IOCTL_MAGIC, 10, struct mcs8000_ioctl_i2c_type)
#define MCS8000_TS_I2C_WRITE						_IOWR( MCS8000_TS_IOCTL_MAGIC, 11, struct mcs8000_ioctl_i2c_type)
#define MCS8000_TS_IOCTL_CHANNEL_DEBUG 				_IO( MCS8000_TS_IOCTL_MAGIC, 12)
#define MCS8000_TS_I2C_READ_BURST 					_IOWR( MCS8000_TS_IOCTL_MAGIC, 13, struct mcs8000_ioctl_i2c_burst_type)
#define MCS8000_TS_IOCTL_KERNEL_DOWN				_IO( MCS8000_TS_IOCTL_MAGIC, 14)
/* LGE_CHANGE_S: E0 kevinzone.han@lge.com [2011-11-14] : For touchscreen manual downloading */
#define MCS8000_TS_IOCTL_KERNEL_DOWN_MANUAL 	_IO( MCS8000_TS_IOCTL_MAGIC, 15)
/* LGE_CHANGE_E: E0 kevinzone.han@lge.com [2011-11-14] : For touchscreen manual downloading */
#define MCS8000_TS_IOCTL_MAXNR 15

struct mcs8000_ioctl_i2c_type {
	int ts_type;
	int addr;
	int data;
};

struct mcs8000_ioctl_i2c_burst_type {
	int ts_type;
	int addr;
	int size;
	unsigned char *pdata;
};

struct mcs8000_ts_ioctl_diag_emul_type {
	int ts_type;
	int x_coord;
	int y_coord;
};

#endif
